@mixin no-wrap {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: keep-all;
    word-wrap: normal;
    flex-wrap: nowrap;
    line-height: 0;
}

// display: contents + pointer-events: none
// used for transparent wrappers
@mixin contents {
    container-type: normal;
    contain: none;
    display: contents;
    pointer-events: none;
    background-color: transparent;
}

//
@mixin flex($dir: row) {
    display: inline flex;
    flex-direction: #{$dir};
    flex-wrap: nowrap;
}

//
@mixin fit-in-grid($columns: 1, $rows: 1) {
    grid-column: 1 / $columns span;
    grid-row: 1 / $rows span;
}

//
@mixin row-subgrid($column: 1, $columns: 1) {
    grid-template-columns: subgrid;
    grid-column: 1 / calc($column + $columns) span;
}

//
@mixin column-subgrid($row: 1, $rows: 1) {
    grid-template-rows: subgrid;
    grid-row: 1 / calc($row + $rows) span;
}



//
@mixin center {
    place-content: safe center;
    place-items: safe center;
}

//
@mixin stretch {
    max-inline-size: 100%;
    max-block-size: 100%;
    inline-size: 100%;
    block-size: 100%;
    flex-basis: 100%;
    flex-grow: 1;
}

// line-break for flex-wrap
@mixin flex-break {
    flex-basis: 100%;
    flex-grow: 1;
    flex-shrink: 0;
}

// full-spacing in flex space
@mixin flex-space {
    flex-grow: 1;
    flex-shrink: 0;
}

//
@mixin fit-by-block($size, $aspect: "1 / 1") {
    aspect-ratio: #{$aspect};
    inline-size: max-content;
    block-size: #{$size};
}

//
@mixin fit-by-inline($size, $aspect: "1 / 1") {
    aspect-ratio: #{$aspect};
    inline-size: #{$size};
    block-size: max-content;
}

//
@mixin clamped-inline($size, $min: "0px", $max: "100%") {
    inline-size: #{$size};
    min-inline-size: #{$min};
    max-inline-size: #{$max};
}

//
@mixin clamped-block($size, $min: "0px", $max: "100%") {
    block-size: #{$size};
    min-block-size: #{$min};
    max-block-size: #{$max};
}

//
@mixin limited-inline($size: "max-content", $max: "100%") {
    inline-size: #{$size};
    max-inline-size: #{$max};
}

//
@mixin limited-block($size: "max-content", $max: "100%") {
    block-size: #{$size};
    max-block-size: #{$max};
}




//
@mixin HQRendering($importance: null) {
    -webkit-font-smoothing: subpixel-antialiased #{$importance};
    -moz-osx-font-smoothing: auto #{$importance};
    text-rendering: optimizeLegibility #{$importance};
    text-rendering: geometricPrecision #{$importance};
    font-smooth: auto #{$importance};
    shape-rendering: auto #{$importance};
    shape-rendering: geometricPrecision #{$importance};
    image-rendering: auto #{$importance};
    image-rendering: optimizeQuality #{$importance};
    image-rendering: smooth #{$importance};
    image-rendering: high-quality #{$importance};
    image-rendering: crisp-edges #{$importance};
}

//
@mixin LQRendering($importance: null) {
    -webkit-font-smoothing: none #{$importance};
    -moz-osx-font-smoothing: grayscale #{$importance};
    text-rendering: optimizeSpeed #{$importance};
    font-smooth: 0px #{$importance};
    font-smooth: never #{$importance};
    shape-rendering: crispEdges #{$importance};
    shape-rendering: optimizeSpeed #{$importance};
    image-rendering: auto #{$importance};
    image-rendering: crisp-edges #{$importance};
    image-rendering: optimizeSpeed #{$importance};
    image-rendering: pixelated #{$importance};
    will-change: transform #{$importance};
}

//
@mixin hw-optimize() {
    @include LQRendering();

    transform: translateZ(0);
    transform-origin: 50% 50%;
    backface-visibility: hidden;

    @supports (contain: layout paint) {
        contain: layout paint;
    }

    box-sizing: border-box;
    overflow: hidden;
    transition: none;
    will-change: transform;

    @supports (scrollbar-width: none) {
        scrollbar-width: none;
    }

    @supports (scrollbar-gutter: stable both-edges) {
        scrollbar-gutter: stable both-edges;
    }
}

//
@mixin disable-transform() {
    rotate: none;
    scale: none;
    translate: none;
    transform: none;

    //
    transform-origin: 50% 50%;
    backface-visibility: visible;

    //
    filter: none;
    backdrop-filter: none;

    //
    perspective: none;
    isolation: auto;

    //
    //contain: size style;
    //container-type: normal;
}

//
@mixin hide-scrollbars() {
    overflow: auto;
    overscroll-behavior: contain;
    scroll-behavior: smooth;
    scrollbar-color: transparent;

    @supports (scrollbar-width: none) {
        scrollbar-width: none;
        scrollbar-color: transparent;
    }

    @supports (scrollbar-gutter: stable both-edges) {
        scrollbar-gutter: stable both-edges;
    }

    &::-webkit-scrollbar {
        -webkit-appearance: none;
        inline-size: 0px;
        block-size: 0px;
        display: none;
    }
}

//
@function pixel-perfect-translate($vx: unquote("var(--translate-x)"), $vy: unquote("var(--translate-y)"), $importance: null) {
    @return translate3d(
        #{unquote("round(nearest, calc(#{$vx} + 0.0001px), var(--ppx))")},
        #{unquote("round(nearest, calc(#{$vy} + 0.0001px), var(--ppx))")},
        0px
    );
}

//
@mixin grid-layout(
    $columns: minmax(0px, 1fr),
    $rows: minmax(0px, 1fr),
    $type: inline
) {
    display: #{$type} grid;
    grid-template-columns: #{$columns};
    grid-template-rows: #{$rows};
}
